swagger: "2.0"
info:
  description: "Service responsible to handle all the calls related to movies."
  version: "1.0.0"
  title: MoviesDbAPI
host: "localhost:7012"
basePath: "/"
tags:
  - name: MoviesDb
    description: Everything that goes with the movies

produces:
  - "application/json"
schemes:
  - "https"

paths:
  '/register':
    post:
      tags:
        - users
      operationId: RegisterUser
      parameters:
        - name: registerRequest
          in: body
          schema:
            $ref: "#/definitions/RegisterRequest"
          required: true
      responses:
        201:
          description: Created
        400:
          description: Bad Request
  '/comment':
    post:
      tags:
        - comments
      operationId: AddComment
      parameters:
        - name: commentRequest
          in: body
          schema:
            $ref: "#/definitions/CommentRequest"
          required: true
      responses:
        201:
          description: Yeeeey!!
        400:
          description: Bad Request

  '/movie/{movie_id}':
    get:
      tags:
        - movies
      operationId: GetMovie
      description: Get a movie by id
      parameters:
        - name: userId
          in: query
          required: false
          type: string
        - name: movie_id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Returns a movie
          schema:
            $ref: "#/definitions/MovieResponseDto"
        401:
          description: Unauthorized
        404:
          description: Movie not found
  '/movies':
    get:
      tags:
        - movies
      operationId: GetMoviesByTitle
      description: Get a list of movies by title
      parameters:
        - name: title
          in: query
          required: true
          type: string
        - name: userId
          in: query
          required: false
          type: string
      responses:
        200:
          description: Returns a list of movies
          schema:
            $ref: "#/definitions/MovieListDto"
        401:
          description: Unauthorized
        404:
          description: Movie not found
  '/movies/favorites':
    post:
      tags:
        - movies
      operationId: AddFavoriteMovie
      parameters:
        - name: favoritesDto
          in: body
          schema:
            $ref: "#/definitions/FavoritesDto"
          required: true
      responses:
        200:
          description: Favorite movie created
    get:
      tags:
        - movies
      operationId: GetFavoriteMovies
      parameters:
        - name: userId
          in: query
          required: true
          type: string
      responses:
        200:
          description: Return a list of favorite movies for a specific user
          schema:
            $ref: "#/definitions/MovieListDto"
    delete:
      tags:
        - movies
      operationId: DeleteFavoriteMovie
      parameters:
        - name: favoritesDto
          in: body
          schema:
            $ref: "#/definitions/FavoritesDto"
          required: true
      responses:
        200:
          description: Favorite movie deleted
  
  '/movies/top-favorites':
    get:
      tags:
        - movies
      operationId: GetTopFavoriteMovies
      parameters:
        - name: userId
          in: query
          required: false
          type: string
      responses:
        200:
          description: Return a list of top favorite movies
          schema:
            $ref: "#/definitions/MovieListDto"
  '/movie/rating/{movieId}':
    get:
      tags:
        - movies
      operationId: GetMovieRating
      parameters:
        - name: movieId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Return the rating of a movie
          schema:
            $ref: "#/definitions/RatingDto"
        401:
          description: Unauthorized
        404:
          description: Movie not found
  '/movie/rated-movie':
    post:
      tags:
        - movies
      operationId: AddRatedMovie
      parameters:
        - name: ratedMovie
          in: body
          schema:
            $ref: "#/definitions/RatedMovieDto"
          required: true
      responses:
        201:
          description: Created
        400:
          description: Bad Request
  '/movie/rating':
    post:
      tags:
        - movies
      operationId: AddRating
      parameters:
        - name: rating
          in: body
          schema:
            $ref: "#/definitions/RatedMovieDto"
          required: true
      responses:
        201:
          description: Created
        400:
          description: Bad Request
  '/person/{personId}':
    get:
      tags:
        - persons
      operationId: GetPerson
      description: Get a person's details by its Id
      parameters:
        - name: personId
          in: path
          type: integer
          required: true
          description: person id
      responses:
        200:
          description: Returns list of persons
          schema:
            $ref: "#/definitions/PersonDetailsDTO"
        401:
          description: Unauthorized
        404:
          description: Person not found

  '/person/{personId}/movies':
    get:
      tags:
        - persons
      operationId: GetPersonMovies
      description: Get a person's movies by its Id
      parameters:
        - name: personId
          in: path
          type: integer
          required: true
          description: person id
      responses:
        200:
          description: Returns list of persons
          schema:
            $ref: "#/definitions/PersonMovieCreditsDTO"
        401:
          description: Unauthorized
        404:
          description: Person not found
  
  '/search/person':
    get:
      tags:
        - persons
      operationId: GetPersonsByName
      description: Get persons by name
      parameters:
        - name: query
          in: query
          type: string
          required: true
          description: name of the person, or part of their name
      responses:
        200:
          description: Returns list of persons
          schema:
            $ref: "#/definitions/PersonsResponseDTO"
        401:
          description: Unauthorized
        404:
          description: Person not found
  '/movie/{movieId}/credits':
    get:
      tags:
        - movies
      operationId: GetMovieCredits
      description: Get a movie's credits by its Id
      parameters:
        - name: movieId
          in: path
          type: integer
          required: true
          description: movie id
      responses:
        200:
          description: Returns credits for a movie
          schema:
            $ref: "#/definitions/MovieCreditsResponseDto"
        401:
          description: Unauthorized
        404:
          description: Credits not found

definitions:
  MovieCreditsResponseDto:
    type: object
    properties:
      cast:
        type: array
        items:
          $ref: '#/definitions/MovieCastDto'
      crew:
        type: array
        items:
          $ref: '#/definitions/MovieCrewDto'
      id:
        type: integer
  
  MovieCastDto:
    type: object
    properties:
      adult:
        type: boolean
      gender:
        type: integer
      id:
        type: integer
      known_for_department:
        type: string
      name:
        type: string
      original_name:
        type: string
      popularity:
        type: number
      profile_path:
        type: string
      cast_id:
        type: integer
      character:
        type: string
      credit_id:
        type: string
      order:
        type: integer
  
  MovieCrewDto:
    type: object
    properties:
      adult:
        type: boolean
      gender:
        type: integer
      id:
        type: integer
      known_for_department:
        type: string
      name:
        type: string
      original_name:
        type: string
      popularity:
        type: number
      profile_path:
        type: string
      credit_id:
        type: string
      department:
        type: string
      job:
        type: string
  
  MovieResponseDto:
    type: object
    properties:
      adult:
        type: boolean
      backdrop_path:
        type: string
      belongs_to_collection:
        type: object
        items:
          $ref: "#/definitions/BelongsToCollection"
      budget:
        type: integer
      genres:
        type: array
        items:
          $ref: "#/definitions/Genre"
      homepage:
        type: string
      id:
        type: integer
      imdb_id:
        type: string
      original_language:
        type: string
      original_title:
        type: string
      overview:
        type: string
      popularity:
        type: number
      poster_path:
        type: string
      production_companies:
        type: array
        items:
          $ref: "#/definitions/ProductionCompany"
      production_countries:
        type: array
        items:
          $ref: "#/definitions/ProductionCountry"
      release_date:
        type: string
      revenue:
        type: integer
      runtime:
        type: integer
      spoken_languages:
        type: array
        items:
          $ref: "#/definitions/SpokenLanguage"
      status:
        type: string
      tagline:
        type: string
      title:
        type: string
      video:
        type: boolean
      vote_average:
        type: number
      vote_count:
        type: integer
      isFavorite:
        type: boolean
    required:
      - id

  Genre:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

  ProductionCompany:
    type: object
    properties:
      id:
        type: integer
      logo_path:
        type: string
      name:
        type: string
      origin_country:
        type: string

  ProductionCountry:
    type: object
    properties:
      iso_3166_1:
        type: string
      name:
        type: string
  
  SpokenLanguage:
    type: object
    properties:
      english_name:
        type: string
      iso_639_1:
        type: string
      name:
        type: string

  BelongsToCollection:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      poster_path:
        type: string
      backdrop_path:
        type: string

  RegisterRequest:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  CommentRequest:
    type: object
    properties:
      userId:
        type: string
      comment:
        type: string
      movieId:
        type: string
  MovieListDto:
    type: object
    properties:
      Results:
        type: array
        items:
          $ref: "#/definitions/MovieDto"
  MovieDto:
    type: object
    properties:
      MovieId:
        type: integer
      Description:
        type: string
      Title:
        type: string
      PosterPath:
        type: string
      ReleaseDate:
        type: string
      IsFavorite:
        type: boolean
    required:
      - MovieId
      - IsFavorite
  FavoritesDto:
    type: object
    properties:
      MovieId:
        type: integer
      UserId:
        type: string
    required:
      - MovieId
      - UserId
  RatingDto:
    type: object
    properties:
      movieId:
        type: integer
      ratingValue:
        type: number
      votes:
        type: integer
  RatedMovieDto:
    type: object
    properties:
      ratedMovieId:
        type: integer
      userId:
        type: string
      rating:
        type: number
  PersonsResponseDTO:
    type: object
    properties:
      persons:
        type: array
        items:
          $ref: '#/definitions/PersonDTO'
  PersonDTO:
    type: object
    properties:
      adult:
        type: boolean
      gender:
        type: string
      id:
        type: integer
      known_for_department:
        type: string
      name:
        type: string
      original_name:
        type: string
      popularity:
        type: number
      profile_path:
        type: string
      known_for:
        type: array
        items:
          $ref: '#/definitions/MovieDto'
  
  PersonDetailsDTO:
    type: object
    properties:
      biography:
        type: string
      birthday:
        type: string
      deathday:
        type: string
      gender:
        type: string
      homepage:
        type: string
      id:
        type: integer
      name:
        type: string
      place_of_birth:
        type: string
      popularity:
        type: number
      profile_path:
        type: string
  
  PersonMovieCreditsDTO:
    type: object
    properties:
      cast:
        type: array
        items:
          $ref: '#/definitions/PersonMovieDTO'
      crew:
        type: array
        items:
          $ref: '#/definitions/PersonMovieDTO'
      id:
        type: integer
  
  PersonMovieDTO:
    type: object
    properties:
      id:
        type: integer
      original_language:
        type: string
      original_title:
        type: string
      overview:
        type: string
      popularity:
        type: number
      poster_path:
        type: string
      release_date:
        type: string
      title:
        type: string
      vote_average:
        type: number
      vote_count:
        type: integer
      character:
        type: string
      credit_id:
        type: string
      order:
        type: string
      department:
        type: string
      job:
        type: string