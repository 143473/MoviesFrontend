@page "/"
@using Radzen.Blazor
@using MoviesApp.Services.Interfaces
@using movies_api
@using Radzen
@inject IMovieService _movieService
@inject NavigationManager _navigation


<PageTitle>Home</PageTitle>
<div class="sticky-top background">
    <div class="logo-banner"></div>

    <div class="justify-content-center rz-display-flex">
        <RadzenTextBox Placeholder="Search for a title..." class="w-75 rz-border-radius-6 rz-my-10 pl-3" Change="@(OnChange)"/>
    </div>
</div>

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap">
@foreach(var movie in movies.Results)
{
    <RadzenCard Class="rz-my-2 rz-mx-2" Style="width: 420px">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">
            @if (string.IsNullOrWhiteSpace(movie.PosterPath))
            {
                <RadzenImage Path="Images/MissingImage.png" Style="width: 100px; height: 100px; border-radius: 1%;"/>
            }
            else
            {
                <RadzenImage Path="@movie.PosterPath" Style="width: 100px; height: 100px; border-radius: 1%;"/>
            }
            <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="0rem">
                <RadzenText TextStyle="TextStyle.Body1"><strong>@movie.Title</strong></RadzenText>
                <RadzenText TextStyle="TextStyle.Body2">@ToYear(movie.ReleaseDate)</RadzenText>
                @if (details.Contains(movie.MovieId))
                {
                    <RadzenLabel>@movie.Description</RadzenLabel>
                    <label class="details-link" @onclick="() => GoToMovie(movie.MovieId)">See less</label>
                }
                else
                {
                    <RadzenLabel>@movie.Description?[..Math.Min(movie.Description.Length, 100)]
                        @if (movie.Description?.Length > 100)
                        {
                            <text>...&nbsp;</text>
                            <label class="details-link" @onclick="() => details.Add(movie.MovieId)">See more</label>
                        }
                    </RadzenLabel>
                }
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
}
</RadzenStack>

@code
{
    private MoviesResponseDto movies = new() { Results = Array.Empty<MovieDto>() };
    private HashSet<int?> details = new();

    private async Task OnChange(string title)
    {
        details.Clear();
        if (string.IsNullOrWhiteSpace(title))
        {
            movies.Results.Clear();
            return;
        }
        
        try
        {
            movies = await _movieService.GetMoviesByTitleAsync(title);
            if (movies.Results.Count == 0)
            {
                SetResult("No results found");
            }
        }
        catch (Exception)
        {
            SetResult("Any error has occured");
        }
    }

    private void SetResult(string message)
    {
        movies.Results = new List<MovieDto> { new() { Title = message } };
    }

    private static string ToYear(string date) => DateTime.TryParse(date, out var dateTime) ? dateTime.Year.ToString() : string.Empty;

    private void GoToMovie(int? id)
    {
        _navigation.NavigateTo($"/Movie/{id}");
    }
}
