@page "/Movie/{Id:int}"
@using MoviesApp.Services.Interfaces
@using movies_api
@inject IMovieService _movieService
@using Radzen.Blazor
@using Radzen

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap">
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4">

        <RadzenImage Path="@imageURL" Style="border-radius: 1%;"/>

        <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="0rem">
            <RadzenText TextStyle="TextStyle.H3" Style="color: white">
                <strong>@movie.Title</strong>
            </RadzenText>
            <RadzenText TextStyle="TextStyle.Body1" Style="color: white">@ToYear(movie.Release_date)</RadzenText>
             <RadzenText TextStyle="TextStyle.Body1" Style="color: white">@movie.Overview</RadzenText>
        </RadzenStack>
    </RadzenStack>
</RadzenStack>
@code {
    [Parameter]
    public int Id { get; set; }
    private string imageURL = "https://image.tmdb.org/t/p/w500";
    private MovieResponse movie = new MovieResponse();
    string title;

    protected override async Task OnInitializedAsync()
    {
        movie = await _movieService.GetMovieAsync(Id);
        imageURL += movie.Poster_path;
        title = movie.Title;
    }

    private static string ToYear(string date) => DateTime.TryParse(date, out var dateTime) ? dateTime.Year.ToString() : string.Empty;

}