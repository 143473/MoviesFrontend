@using movies_api
@using Radzen
@using Radzen.Blazor
@using System.Diagnostics
@using System.Security.Policy
@inject NavigationManager _navigation

<RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Wrap="FlexWrap.Wrap">
    @foreach (var movie in Movies)
    {
        <div style="background-image: url(@SetPath(movie));">
        <RadzenCard Class="rz-my-2 rz-mx-2" Style="width: 420px; height: 220px; background-color: rgba(255,255,255,0.8)">
              
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4" Style="opacity: 1">

                @if (string.IsNullOrWhiteSpace(movie.PosterPath))
                {
                    <RadzenImage Path="Images/MissingImage.png" Style="width: 100px; height: 150px; border-radius: 1%;"/>
                }
                else
                {
                    <RadzenImage Path="@movie.PosterPath" Style="width: 100px; height: 150px; border-radius: 1%;"/>
                }
                <RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="0rem">

                    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween">
                        <RadzenText TextStyle="TextStyle.H6"><strong>@movie.Title</strong></RadzenText>
                        @if (movie.MovieId != 0)
                        {
                            <AuthorizeView>
                                <FavoriteButton OnFavorite="@OnFavorite" Movie="movie"></FavoriteButton>
                            </AuthorizeView>
                        }
                    </RadzenStack>
                    @if (movie.MovieId != 0)
                    {
                        <RadzenText TextStyle="TextStyle.Body2" Style="margin-bottom: 5px;"><strong>@ToYear(movie.ReleaseDate)</strong></RadzenText>
                        <RadzenText Style="height: 60px; width: 250px; overflow:clip; margin-bottom: 5px;">@movie.Description</RadzenText>
                        <label class="details-link" @onclick="() => GoToMovie(movie.MovieId)">See more</label>
                    }
                </RadzenStack>
            </RadzenStack>
              
        </RadzenCard>
        </div>
     
    }
</RadzenStack>

@code {
    [Parameter]
    public ICollection<MovieDto> Movies { get; set; } = new List<MovieDto>();

    [Parameter]
    public Func<MovieDto, Task> OnFavorite { get; set; } = null!;
    
    private string path = "Images/MissingImage.png";

    private string SetPath(MovieDto movie)
    {
        path = movie.BackdropPath;
        return path;
    }

    private static string ToYear(string date) => DateTime.TryParse(date, out var dateTime) ? dateTime.Year.ToString() : string.Empty;

    private void GoToMovie(int? id)
    {
        _navigation.NavigateTo($"/Movie/{id}");
    }
    
    private string SetBackground(MovieDto movie)
    {
      return movie.PosterPath;
    }

}